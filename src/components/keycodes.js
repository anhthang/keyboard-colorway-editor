export default [
  { name: 'Esc', code: 'KC_ESC', type: 'mod', keys: 'esc' },
  { name: 'F1', code: 'KC_F1', type: 'key', modifier: true, keys: 'f1' },
  { name: 'F2', code: 'KC_F2', type: 'key', modifier: true, keys: 'f2' },
  { name: 'F3', code: 'KC_F3', type: 'key', modifier: true, keys: 'f3' },
  { name: 'F4', code: 'KC_F4', type: 'key', modifier: true, keys: 'f4' },
  { name: 'F5', code: 'KC_F5', type: 'mod', keys: 'f5' },
  { name: 'F6', code: 'KC_F6', type: 'mod', keys: 'f6' },
  { name: 'F7', code: 'KC_F7', type: 'mod', keys: 'f7' },
  { name: 'F8', code: 'KC_F8', type: 'mod', keys: 'f8' },
  { name: 'F9', code: 'KC_F9', type: 'key', modifier: true, keys: 'f9' },
  { name: 'F10', code: 'KC_F10', type: 'key', modifier: true, keys: 'f10' },
  { name: 'F11', code: 'KC_F11', type: 'key', modifier: true, keys: 'f11' },
  { name: 'F12', code: 'KC_F12', type: 'key', modifier: true, keys: 'f12' },
  { name: 'Print Screen', code: 'KC_PSCR', type: 'mod' },
  { name: 'Scroll Lock', code: 'KC_SLCK', type: 'mod' },
  { name: 'Pause', code: 'KC_PAUS', type: 'mod' },
  { name: '~\n`', code: 'KC_GRV', type: 'key', keys: '`', hiragana: 'ろ', cyrillics: 'Ё' },
  { name: '!\n1', code: 'KC_1', type: 'key', keys: '1', hiragana: 'ぬ' },
  { name: '@\n2', code: 'KC_2', type: 'key', keys: '2', hiragana: 'ふ', cyrillics: '"\n2' },
  { name: '#\n3', code: 'KC_3', type: 'key', keys: '3', hiragana: 'あ', cyrillics: '№\n3' },
  { name: '$\n4', code: 'KC_4', type: 'key', keys: '4', hiragana: 'う', cyrillics: ';\n4' },
  { name: '%\n5', code: 'KC_5', type: 'key', keys: '5', hiragana: 'え', cyrillics: '%\n5' },
  { name: '^\n6', code: 'KC_6', type: 'key', keys: '6', hiragana: 'お', cyrillics: ':\n6' },
  { name: '&\n7', code: 'KC_7', type: 'key', keys: '7', hiragana: 'や' },
  { name: '*\n8', code: 'KC_8', type: 'key', keys: '8', hiragana: 'ゆ' },
  { name: '(\n9', code: 'KC_9', type: 'key', keys: '9', hiragana: 'よ' },
  { name: ')\n0', code: 'KC_0', type: 'key', keys: '0', hiragana: 'わ' },
  { name: '_\n-', code: 'KC_MINS', type: 'key', keys: '-', hiragana: 'ほ' },
  { name: '+\n=', code: 'KC_EQL', type: 'key', keys: '=', hiragana: 'へ' },
  { name: 'Back Space', code: 'KC_BSPC', type: 'mod', keys: 'backspace', width: 2000 },
  { name: 'Insert', code: 'KC_INS', type: 'mod', keys: 'insert' },
  { name: 'Home', code: 'KC_HOME', type: 'mod', keys: 'home' },
  { name: 'Page Up', code: 'KC_PGUP', type: 'mod', keys: 'pageup' },
  { name: 'Num Lock', code: 'KC_NLCK', type: 'mod', keys: 'num' },
  { name: '/', code: 'KC_PSLS', type: 'mod', keys: 'num_divide' },
  { name: '*', code: 'KC_PAST', type: 'mod', keys: 'num_multiply' },
  { name: '-', code: 'KC_PMNS', type: 'mod', keys: 'num_subtract' },
  { name: 'Tab', code: 'KC_TAB', type: 'mod', keys: 'tab', width: 1500 },
  { name: 'Q', code: 'KC_Q', type: 'key', keys: 'q', hiragana: 'た', hangul: 'ㅂ', cyrillics: 'Й' },
  { name: 'W', code: 'KC_W', type: 'key', keys: 'w', hiragana: 'て', hangul: 'ㅈ', cyrillics: 'Ц' },
  { name: 'E', code: 'KC_E', type: 'key', keys: 'e', hiragana: 'い', hangul: 'ㄷ', cyrillics: 'У' },
  { name: 'R', code: 'KC_R', type: 'key', keys: 'r', hiragana: 'す', hangul: 'ㄱ', cyrillics: 'К' },
  { name: 'T', code: 'KC_T', type: 'key', keys: 't', hiragana: 'か', hangul: 'ㅅ', cyrillics: 'Е' },
  { name: 'Y', code: 'KC_Y', type: 'key', keys: 'y', hiragana: 'ん', hangul: 'ㅛ', cyrillics: 'H' },
  { name: 'U', code: 'KC_U', type: 'key', keys: 'u', hiragana: 'な', hangul: 'ㅕ', cyrillics: 'Г' },
  { name: 'I', code: 'KC_I', type: 'key', keys: 'i', hiragana: 'に', hangul: 'ㅑ', cyrillics: 'Ш' },
  { name: 'O', code: 'KC_O', type: 'key', keys: 'o', hiragana: 'ら', hangul: 'ㅐ', cyrillics: 'Щ' },
  { name: 'P', code: 'KC_P', type: 'key', keys: 'p', hiragana: 'せ', hangul: 'ㅔ', cyrillics: 'З' },
  { name: '{\n[', code: 'KC_LBRC', type: 'key', keys: '[', hiragana: '゛', cyrillics: 'X' },
  { name: '}\n]', code: 'KC_RBRC', type: 'key', keys: ']', hiragana: '゜', cyrillics: 'Ъ' },
  { name: '|\n\\', code: 'KC_BSLS', type: 'key', keys: '\\', hiragana: 'む', width: 1500, cyrillics: '/\n\\' },
  { name: 'Del', code: 'KC_DEL', type: 'mod', keys: 'delete' },
  { name: 'End', code: 'KC_END', type: 'mod', keys: 'end' },
  { name: 'Page Down', code: 'KC_PGDN', type: 'mod', keys: 'pagedown' },
  { name: '7', code: 'KC_P7', type: 'key', numpad: true, keys: 'num_7' },
  { name: '8', code: 'KC_P8', type: 'key', numpad: true, keys: 'num_8' },
  { name: '9', code: 'KC_P9', type: 'key', numpad: true, keys: 'num_9' },
  { name: '+', code: 'KC_PPLS', type: 'mod', keys: 'num_add' },
  { name: 'Caps Lock', code: 'KC_CAPS', type: 'mod', keys: 'caps_lock', width: 1750 },
  { name: 'A', code: 'KC_A', type: 'key', keys: 'a', hiragana: 'ち', hangul: 'ㅁ', cyrillics: 'Ф' },
  { name: 'S', code: 'KC_S', type: 'key', keys: 's', hiragana: 'と', hangul: 'ㄴ', cyrillics: 'Ы' },
  { name: 'D', code: 'KC_D', type: 'key', keys: 'd', hiragana: 'し', hangul: 'ㅇ', cyrillics: 'B' },
  { name: 'F', code: 'KC_F', type: 'key', keys: 'f', hiragana: 'は', hangul: 'ㄹ', cyrillics: 'A' },
  { name: 'G', code: 'KC_G', type: 'key', keys: 'g', hiragana: 'き', hangul: 'ㅎ', cyrillics: 'П' },
  { name: 'H', code: 'KC_H', type: 'key', keys: 'h', hiragana: 'く', hangul: 'ㅗ', cyrillics: 'P' },
  { name: 'J', code: 'KC_J', type: 'key', keys: 'j', hiragana: 'ま', hangul: 'ㅓ', cyrillics: 'O' },
  { name: 'K', code: 'KC_K', type: 'key', keys: 'k', hiragana: 'の', hangul: 'ㅏ', cyrillics: 'Л' },
  { name: 'L', code: 'KC_L', type: 'key', keys: 'l', hiragana: 'り', hangul: 'ㅣ', cyrillics: 'Д' },
  { name: ':\n;', code: 'KC_SCLN', type: 'key', keys: ';', hiragana: 'れ', cyrillics: 'Ж' },
  { name: '"\n\'', code: 'KC_QUOT', type: 'key', keys: "'", hiragana: 'け', cyrillics: 'Э' },
  { name: 'Enter', code: 'KC_ENT', type: 'mod', keys: 'enter', width: 2250 },
  { name: '4', code: 'KC_P4', type: 'key', numpad: true, keys: 'num_4' },
  { name: '5', code: 'KC_P5', type: 'key', numpad: true, keys: 'num_5' },
  { name: '6', code: 'KC_P6', type: 'key', numpad: true, keys: 'num_6' },
  { name: ',', code: 'KC_PCMM', type: '' },
  { name: 'Left Shift', code: 'KC_LSFT', type: 'mod', keys: 'shift', width: 2250 },
  { name: 'Z', code: 'KC_Z', type: 'key', keys: 'z', hiragana: 'つ', hangul: 'ㅋ', cyrillics: 'Я' },
  { name: 'X', code: 'KC_X', type: 'key', keys: 'x', hiragana: 'さ', hangul: 'ㅌ', cyrillics: 'Ч' },
  { name: 'C', code: 'KC_C', type: 'key', keys: 'c', hiragana: 'そ', hangul: 'ㅊ', cyrillics: 'C' },
  { name: 'V', code: 'KC_V', type: 'key', keys: 'v', hiragana: 'ひ', hangul: 'ㅍ', cyrillics: 'M' },
  { name: 'B', code: 'KC_B', type: 'key', keys: 'b', hiragana: 'こ', hangul: 'ㅠ', cyrillics: 'И' },
  { name: 'N', code: 'KC_N', type: 'key', keys: 'n', hiragana: 'み', hangul: 'ㅜ', cyrillics: 'T' },
  { name: 'M', code: 'KC_M', type: 'key', keys: 'm', hiragana: 'も', hangul: 'ㅡ', cyrillics: 'Ь' },
  { name: '<\n,', code: 'KC_COMM', type: 'key', keys: ',', hiragana: 'ね', cyrillics: 'Б' },
  { name: '>\n.', code: 'KC_DOT', type: 'key', keys: '.', hiragana: 'る', cyrillics: 'Ю' },
  { name: '?\n/', code: 'KC_SLSH', type: 'key', keys: '/', hiragana: 'め', cyrillics: ',\n.' },
  { name: 'Right Shift', code: 'KC_RSFT', type: 'mod', width: 2750 },
  { name: 'Up', code: 'KC_UP', type: 'mod', keys: 'up' },
  { name: '1', code: 'KC_P1', type: 'key', numpad: true, keys: 'num_1' },
  { name: '2', code: 'KC_P2', type: 'key', numpad: true, keys: 'num_2' },
  { name: '3', code: 'KC_P3', type: 'key', numpad: true, keys: 'num_3' },
  { name: '=', code: 'KC_PEQL', type: '' },
  { name: 'Left Ctrl', code: 'KC_LCTL', type: 'mod', keys: 'ctrl', width: 1250 },
  { name: 'Left OS', code: 'KC_LGUI', type: 'mod', keys: 'cmd', width: 1250 },
  { name: 'Left Alt', code: 'KC_LALT', type: 'mod', keys: 'alt', width: 1250 },
  { name: 'Space', code: 'KC_SPC', type: 'key', keys: 'space', width: 6250 },
  { name: 'Right Alt', code: 'KC_RALT', type: 'mod', width: 1250 },
  { name: 'Right OS', code: 'KC_RGUI', type: 'mod', width: 1250 },
  { name: 'Menu', code: 'KC_APP', type: 'mod', width: 1250 },
  { name: 'Right Ctrl', code: 'KC_RCTL', type: 'mod', width: 1250 },
  { name: 'Left', code: 'KC_LEFT', type: 'mod', keys: 'left' },
  { name: 'Down', code: 'KC_DOWN', type: 'mod', keys: 'down' },
  { name: 'Right', code: 'KC_RGHT', type: 'mod', keys: 'right' },
  { name: '0', code: 'KC_P0', type: 'key', numpad: true, keys: 'num_0', width: 2000 },
  { name: '.', code: 'KC_PDOT', type: 'key', numpad: true, keys: 'num_decimal' },
  { name: 'Enter', code: 'KC_PENT', type: 'mod', keys: 'num_enter' },
  { name: '~', code: 'KC_TILD', type: '', keys: '~' },
  { name: '!', code: 'KC_EXLM', type: '', keys: '!' },
  { name: '@', code: 'KC_AT', type: '', keys: '@' },
  { name: '#', code: 'KC_HASH', type: '', keys: '#' },
  { name: '$', code: 'KC_DLR', type: '', keys: '$' },
  { name: '%', code: 'KC_PERC', type: '', keys: '%' },
  { name: '^', code: 'KC_CIRC', type: '', keys: '^' },
  { name: '&', code: 'KC_AMPR', type: '', keys: '&' },
  { name: '*', code: 'KC_ASTR', type: '', keys: '*' },
  { name: '(', code: 'KC_LPRN', type: '', keys: '(' },
  { name: ')', code: 'KC_RPRN', type: '', keys: ')' },
  { name: '_', code: 'KC_UNDS', type: '', keys: '_' },
  { name: '+', code: 'KC_PLUS', type: '', keys: '+' },
  { name: '{', code: 'KC_LCBR', type: '', keys: '{' },
  { name: '}', code: 'KC_RCBR', type: '', keys: '}' },
  { name: '<', code: 'KC_LT', type: '', keys: '<' },
  { name: '>', code: 'KC_GT', type: '', keys: '>' },
  { name: ':', code: 'KC_COLN', type: '', keys: ':' },
  { name: '|', code: 'KC_PIPE', type: '', keys: '|' },
  { name: '?', code: 'KC_QUES', type: '', keys: '?' },
  { name: '"', code: 'KC_DQUO', type: '', keys: '"' },
  { name: 'Esc/~', code: 'KC_GESC', type: 'key', title: 'Esc normally, but ~ when Shift or GUI is pressed' },
  { name: 'MO', code: 'MO(layer)', type: 'layer', layer: 0, title: 'Momentary turn layer on. AKA FN'},
  { name: 'TG', code: 'TG(layer)', type: 'layer', layer: 0, title: 'Toggle layer on/off'},
  { name: 'TO', code: 'TO(layer)', type: 'layer', layer: 0, title: 'Turn on layer when pressed'},
  { name: 'TT', code: 'TT(layer)', type: 'layer', layer: 0, title:   "Normally acts like MO unless it's tapped multple times which toggles layer on"},
  { name: 'DF', code: 'DF(layer)', type: 'layer', layer: 0, title: 'Sets the default layer'},
  { name: 'OSL', code: 'OSL(layer)', type: 'layer', layer: 0, title: 'Switch to layer for one keypress'},
];